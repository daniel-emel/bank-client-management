spring:
  application:
    name: client-backend
  profiles:
    active:
    - tls
    - mariadb
#    - openapi-and-swagger-disabled
#    - show-sql

# Authentication methods: Please always select exactly 1 of the following profiles
#    - api-key
#    - basic-auth
#    - jwt
#    - oauth2
#    - mtls

server:
  port: 8080

logging:
  level:
    root: INFO


######################
###### PROFILES ######
######################
---
spring:
  config:
    activate:
      on-profile: ssl

server:
  ssl:
    enabled: true
    key-store-type: PKCS12
    key-store: classpath:cert/client.backend.keystore.p12
    key-store-password: changeit     # TODO Encrypt password
    protocol: TLS
    enabled-protocols: TLSv1.2,TLSv1.3

---
spring:
  config:
    activate:
      on-profile: mariadb

  datasource:
    url: jdbc:mariadb://localhost:3306/my_bank?createDatabaseIfNotExist=true&useUnicode=yes&characterEncoding=UTF-8
    driver-class-name: org.mariadb.jdbc.Driver
    username: my_bank_master
    password: changeit           # TODO Encrypt password
  jpa:
    generate-ddl: true          # TODO Check it
    defer-datasource-initialization: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MariaDBDialect
        ddl-auto: create-drop
#        connection:
#          characterEncoding: utf-8
#          CharSet: utf-8
#          useUnicode: true
#          collationConnection: utf8_general_ci
  sql:
    init:
      mode: always
---
spring:
  config:
    activate:
      on-profile: openapi-and-swagger-disabled

springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false
---
spring:
  config:
    activate:
      on-profile: show-sql

  jpa:
    properties:
      show-sql: true
---
spring:
  config:
    activate:
      on-profile: api-key
---
spring:
  config:
    activate:
      on-profile: basic-auth
---
spring:
  config:
    activate:
      on-profile: jwt
---
spring:
  config:
    activate:
      on-profile: oauth2
---
spring:
  config:
    activate:
      on-profile: mtls

server:
  ssl:
    client-auth: need
    trust-store: classpath:cert/client.backend.truststore.p12
    trust-store-password: changeit     # TODO Encrypt password